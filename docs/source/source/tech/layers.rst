layers.py
==============

The layers are auto-generated by filling the ``layers.csv`` file, ``FLYLINE_MARK`` / ``ERROR_MARK`` layer are defined by **Latitudeda** for error display.

::

    class LAYER(LayerEnum):
        SINCOR = Layer(PROCESS.SIN, PURPOSE.COR, '200nm Full Etch SiN waveguide core')
        SINCLD = Layer(PROCESS.SIN, PURPOSE.CLD, '200nm Full Etch SiN waveguide cladding')
        SINTCH = Layer(PROCESS.SIN, PURPOSE.TRE, '200nm Full Etch SiN waveguide trench')
        BB = Layer(PROCESS.BB, PURPOSE.DRW, 'Define design boundary')
        DOC = Layer(PROCESS.DOC, PURPOSE.DRW, 'Only for layout recognization, will not appear on mask')
        PINREC = Layer(PROCESS.PINREC, PURPOSE.DRW, 'Port recognization')
        FLYLINE_MARK = Layer(PROCESS.FLYLINE, PURPOSE.MARK, 'Flyline for insufficient space in AutoLink(from LDA)')
        ERROR_MARK = Layer(PROCESS.ERROR, PURPOSE.MARK, 'Error mark(from LDA)')

For users using layout viewers (e.g. KLayout), they can import the layer properties file ``layers.lyp`` in the file folder.